$title@: 설계 원칙
$order: 1
class: design-principles bg-triangle-primary
$view: /views/design-principles.html
$parent: /content/learn/overview.yaml

subtitle@: 이러한 설계 원칙은 AMP의 지속적인 설계 및 개발을 안내하기위한 것입니다. 그들은 우리가 내부적으로 일관된 결정을 하도록 도와야합니다.

principles:
  - title@: 사용자 경험 > 개발자 경험 > 구현의 용이함
    description@: 애매한 경우, 페이지 제작자나 라이브러리 개발자가 구현이 어렵다고 하더라도,
    최종 사용자 경험에 가장 적합한 것을 하세요.
    icon: design_icon_ux.svg
  - title@: 가상의 빠른 미래 브라우저로 설계하지 마세요.
    description@: "우리는 내일의 웹이 아닌 오늘날의 웹을 고치기 위해 [확장 가능한 웹 선언](https://github.com/extensibleweb/manifesto/blob/master/README.md) 정신으로 AMP를 라이브러리로 구축하기로 했습니다. AMP는 오늘날의 브라우저에서 빠릅니다. 오늘날의 플랫폼에서 최적화가 불가능한 경우, AMP 개발자가 표준 개발에 참여하여 웹 플랫폼에 이런 기능을 추가해야 합니다."
    icon: design_icon_future.svg
  - title@: 웹을 망가뜨리지 마라
    description@: AMP에 장애나 문제가 있어도 나머지 웹에 피해를 주지 않도록 해야합니다.
    즉 Google AMP Cache, URL API 또는 라이브러리에 오류가 발생하면 웹사이트 및 앱이 성능저하할 수 있습니다.
    어떤 것이 AMP cache와 함께 동작하면 캐시 없이도 동작해야합니다.
    icon: design_icon_break.svg
  - title@: 올바른 레이어에서 문제를 해결하십시오
    description@: 예 : 서버 사이드 통합으로 사용자 환경을 개선하는 것이 더 쉽기 때문에
    클라이언트 사이드에서 모든 것을 통합하지 마십시오.
    icon: design_icon_layers.svg
  - title@: 빠르게 할 수 있는 경우에만 일을 수행하십시오
    description@: AMP에 60fps에서 안정적으로 동작하지 않는 기능이나 컴포넌트를 도입하거나,
    오늘날의 가장 일반적인 모바일 기기에서 즉시 로드 경험을 방해하지 마십시오.
    icon: design_icon_fast.svg
  - title@: 사용자 경험을 향상시키는 것에 우선순위를 두세요. - 하지만 때론 타협도 필요합니다.
    description@: 어떤 것들은 빠르지만 여전히 사용자 경험이 최악입니다.
    AMP는 환상적인 사용자 경험을 제공해야하며 속도는 그 중 일부일 뿐입니다.
    무언가에 대한 지원이 부족할 때 AMP가 널리 사용되고 배포되는 걸 막을 수 있습니다.
    icon: design_icon_priorities.svg
  - title@: 허용된 화이트리스트가 없습니다.
    description@: 보안 또는 성능상의 이유로 필요한 경우를 제외하고는 특정 사이트, 도메인 또는 출처에 대해 특별한 대우를 하지 않을 것입니다.
    icon: design_icon_whitelist.svg

cta:
  title@: 첫 번째 AMP 페이지 만들기
  link_text@: Tutorials
  link_url: /content/docs/get_started/create.md
